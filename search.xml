<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>CSS选择器(一)</title>
      <link href="/2018/09/02/CSS%E9%80%89%E6%8B%A9%E5%99%A8(%E4%B8%80)/"/>
      <content type="html"><![CDATA[<p>balabala<br><a id="more"></a></p><h2 id="一、CSS选择器"><a href="#一、CSS选择器" class="headerlink" title="一、CSS选择器"></a><strong>一、CSS选择器</strong></h2><p><br></p><h3 id="1-1、上下文选择器"><a href="#1-1、上下文选择器" class="headerlink" title="1.1、上下文选择器"></a><strong>1.1、上下文选择器</strong></h3><p>上下文选择器的声明格式如下：</p><p><strong>标签1 标签2 { 声明 }</strong></p><blockquote><p>一组以空格分隔的标签名。用于选择作为指定祖先元素后代的标签。</p></blockquote><p>例如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span> <span class="selector-tag">p</span> &#123; <span class="attribute">font-weight</span>:bold; &#125;</span><br></pre></td></tr></table></figure><p>表示只有 <strong>article后代的所有p元素</strong> 才会应用此样式</p><p>又如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">article</span> <span class="selector-tag">h1</span> <span class="selector-tag">p</span> &#123; <span class="attribute">color</span>:green; &#125;</span><br></pre></td></tr></table></figure><p>表示选中的p必须有一个祖先是h1，h1还要有个祖先是article</p><hr><p><br></p><h3 id="1-2、特殊的上下文选择器"><a href="#1-2、特殊的上下文选择器" class="headerlink" title="1.2、特殊的上下文选择器"></a><strong>1.2、特殊的上下文选择器</strong></h3><p>所用示例代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>An H2 Heading<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This is paragraph 1<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Paragraph 2 has <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>a link<span class="tag">&lt;/<span class="name">a</span>&gt;</span> in it.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述代码的显示效果如下：</p><p><img src="/2018/09/02/CSS选择器(一)/1.png" alt="Alt text"><br><br></p><h4 id="子选择符-gt"><a href="#子选择符-gt" class="headerlink" title="子选择符 &gt;"></a><strong>子选择符 &gt;</strong></h4><p>用法：<strong>标签1 &gt; 标签2 { 声明 }</strong></p><p>下面我们给示例代码用子选择符添加样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">section</span> &gt; <span class="selector-tag">h2</span> &#123; <span class="attribute">font-style</span>:italic; &#125;</span><br></pre></td></tr></table></figure><p><img src="/2018/09/02/CSS选择器(一)/2.png" alt="示例1"></p><p>标签2必须是标签1的子元素，与常规的上下文选择符不同，这个选择符中的标签1不能是标签2的父元素之外的其他祖先元素。<br><br></p><h4 id="紧邻同胞选择符"><a href="#紧邻同胞选择符" class="headerlink" title="紧邻同胞选择符  +"></a><strong>紧邻同胞选择符  +</strong></h4><p>用法：<strong>标签1 + 标签2 { 声明 }</strong><br>例如：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span> + <span class="selector-tag">p</span> &#123;<span class="attribute">font-weight</span>:bold;&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2018/09/02/CSS选择器(一)/3.png" alt="Alt text"><br>标签2必须紧邻标签1，否则不会被选择到，比如，如果将p元素换成a元素，由于a元素没有紧邻p元素，所以a元素不会被选择到。<br><br></p><h4 id="一般同胞选择符"><a href="#一般同胞选择符" class="headerlink" title="一般同胞选择符 ~"></a><strong>一般同胞选择符 ~</strong></h4><p>用法：<strong>标签1 ~ 标签2 { 声明 }</strong> </p><p>例如：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h2</span> ~ <span class="selector-tag">a</span> &#123;<span class="attribute">font-weight</span>:italic;&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2018/09/02/CSS选择器(一)/4.png" alt="Alt text"></p><p>可以看到h2的同胞元素a被选中，而p元素中的a元素却没有被选择到，也就是说一般同胞选择符只能选择到同胞元素，<strong>并且是在标签1之后的元素</strong>，两个元素之间不一定要紧邻，这也是和紧邻同胞选择符的一个区别之一<br><br></p><h4 id="通用选择符"><a href="#通用选择符" class="headerlink" title="通用选择符 *"></a><strong>通用选择符 *</strong></h4><p>用法：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* &#123;<span class="attribute">color</span>:green&#125;</span><br></pre></td></tr></table></figure></p><blockquote><p>这样会导致所有元素的文字和边框颜色变成绿色，一般在使用时都会同时使用另一个选择符</p></blockquote><p>比如:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> * &#123;<span class="attribute">color</span>:green&#125;</span><br></pre></td></tr></table></figure></p><p><strong>这样就会把p包含的所有元素的文本(不包括p本身的文本！)成绿色。</strong><br>还可以用它来构成非子选择符<br>例如:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">section</span> * <span class="selector-tag">a</span> &#123;<span class="attribute">font-weight</span>:bold;&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2018/09/02/CSS选择器(一)/5.png" alt="Alt text"></p><p>可以看到并没有选中section的子元素a，而是选中了section的孙子元素a。也就是说，任何section的孙子元素，而非子元素a都会被选中，与a的父元素没有关系。</p><hr><p><br></p><h3 id="2-1、类选择器"><a href="#2-1、类选择器" class="headerlink" title="2.1、类选择器"></a><strong>2.1、类选择器</strong></h3><p>所用示例代码：可以看到已经为h1和p标签添加了specialtext类</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">class</span>=<span class="string">"specialtext"</span>&gt;</span>This is a heading with the <span class="tag">&lt;<span class="name">span</span>&gt;</span>same class<span class="tag">&lt;/<span class="name">span</span>&gt;</span>as the second paragraph.<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>This tag has no class.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"specialtext"</span>&gt;</span> When a tag has a class attribute, you can target it <span class="tag">&lt;<span class="name">span</span>&gt;</span>regardless<span class="tag">&lt;/<span class="name">span</span>&gt;</span> of its position in the hierarchy.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果如下：<br><img src="/images/placeholder.png" alt="Alt text" data-src="6.png" class="lazyload"></p><h3 id="2-2、类选择符"><a href="#2-2、类选择符" class="headerlink" title="2.2、类选择符"></a><strong>2.2、类选择符</strong></h3><p>用法：<strong>.类名 {声明}</strong></p><p>例如:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.specialtext</span> &#123; <span class="attribute">font-style</span>:italic; &#125;</span><br></pre></td></tr></table></figure></p><p><img src="/images/placeholder.png" alt="Alt text" data-src="7.png" class="lazyload"></p><p>可以看到包含有specialtext类的标签全部被选中，<strong>且span元素由于我们没有为其添加样式，所以就继承了父元素的样式</strong></p><h3 id="2-3、标签带类选择符"><a href="#2-3、标签带类选择符" class="headerlink" title="2.3、标签带类选择符"></a><strong>2.3、标签带类选择符</strong></h3><p>假如只想让带有specialtext的p元素被选中，可以使用p.specialtext<br>例如:<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.sepcialtext</span> &#123; <span class="attribute">font-style</span>:italic; &#125;</span><br></pre></td></tr></table></figure></p><p><img src="/images/placeholder.png" alt="Alt text" data-src="8.png" class="lazyload"><br>可以看到带有specialtext的p标签被选中</p><h3 id="2-4、多类选择符"><a href="#2-4、多类选择符" class="headerlink" title="2.4、多类选择符"></a><strong>2.4、多类选择符</strong></h3><ul><li>可以给一个元素添加多个类，比如</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"specialtext featured"</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>要选择同时存在这两个类名的元素，可以这样写</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.specialtext</span><span class="selector-class">.featured</span> &#123;<span class="attribute">font-size</span>:<span class="number">120%</span>;&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>两个类名之间是没有空格的，若加了空格则变成了“祖先 后代”的上下文选择符</p><hr><p><br></p><h3 id="3-1、ID选择器"><a href="#3-1、ID选择器" class="headerlink" title="3.1、ID选择器"></a><strong>3.1、ID选择器</strong></h3><p>如果有一个段落像下面这样设定了 ID属性 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"specialtext"</span>&gt;</span>This is the special text.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 那么，相应的 ID选择符就是这样的：<br><figure class="highlight plain"><figcaption><span>&#123;CSS 样式声明&#125;```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> 或者这样的： </span><br><span class="line"></span><br><span class="line">```p#specialtext &#123;CSS 样式声明&#125;</span><br></pre></td></tr></table></figure></p><p>除此之外，ID与类的用法都一样，而且我们前面的关于类选择符的（几乎）一切，都适应于 ID选择符。</p><hr><h4 id="1-2-5-类选择器与ID选择器的区别"><a href="#1-2-5-类选择器与ID选择器的区别" class="headerlink" title="1.2.5 类选择器与ID选择器的区别"></a>1.2.5 类选择器与ID选择器的区别</h4><ul><li><strong>ID选择器可用于页面导航</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;#bio&quot;&gt;Biography&lt;/a&gt;</span><br><span class="line">&lt;h3 id=&quot;bio&quot;&gt;Biography&lt;/h3&gt;</span><br></pre></td></tr></table></figure><blockquote><p>单击链接时，页面会向下滚动到 id 值为 bio 的 h3 元素的位置，如果链接的 href 属性里只有一个#，那么点击该链接会返回页面顶部。 </p></blockquote><blockquote><p>若暂时不知道href 应该放什么 URL，可以用#作为占位符，但不能留空。因为 href 属性值为空的链接的行&gt; 为跟正常链接不一样。这样团队中的其他人将来可 以用中间层（比如 PHP）变量替换#，以便动态接收来自数据库的 URL。</p></blockquote><p><strong>什么时候用ID？</strong> </p><blockquote><p>ID是唯一的，同一个页面中每个ID只能用一次。<br>一般给页面中的每个顶级区域都添加一个ID，这样就能得到非常明确的上下文。</p></blockquote><p><strong>什么时候用类？</strong> </p><blockquote><p>类的目的是为了标识一组具有相同特征的元素。</p></blockquote><p>在下面这个孩子名字的列表中，我想把男孩的名字变成蓝色，把女孩的名字变成粉 红色。首先，我用类在标记中标识出了性别</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span>         </span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"boy"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Alan<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>         </span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"boy"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Andrew<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"girl"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Angela<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"boy"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Angus<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"girl"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Anne<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"girl"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>Annette<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span>     </span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后，再用 CSS为链接应用颜色： </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.boy</span> <span class="selector-tag">a</span> &#123;<span class="attribute">color</span>:<span class="number">#6CF</span>;&#125;<span class="comment">/*蓝色*/</span> </span><br><span class="line"><span class="selector-class">.girl</span> <span class="selector-tag">a</span> &#123;<span class="attribute">color</span>:<span class="number">#F9C</span>;&#125;<span class="comment">/*粉红色*/</span></span><br></pre></td></tr></table></figure><ul><li><strong>不要乱用类</strong></li></ul><blockquote><p>不要像使用 ID 一样，每个类都指定一个不同的类名，然后再为每个类编写规则，这样你可能会给每个标签都重复写同样的样式。实际上，继承和上下文选择符能让不同的标签共享样式，从而降低你需要编写和维护的 CSS 量。 </p></blockquote>]]></content>
      
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/08/26/hello-world/"/>
      <content type="html"><![CDATA[<p><img src="/2018/08/26/hello-world/banner.jpg" alt="banner"></p><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="built_in">document</span>.getElementById(<span class="string">'a'</span>);</span><br><span class="line"><span class="keyword">var</span> b = a;</span><br></pre></td></tr></table></figure><blockquote><p><strong>some test</strong><br><strong>中文测试</strong></p></blockquote><p><strong>some test</strong></p><h1 id="中文测试"><a href="#中文测试" class="headerlink" title="中文测试"></a><strong>中文测试</strong></h1>]]></content>
      
      
        <tags>
            
            <tag> test </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
